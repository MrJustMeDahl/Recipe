package Security.DAO;

import DTO.RecipeDTO;
import Model.Person;
import Model.Recipe;
import Model.Tag;
import jakarta.persistence.EntityManager;

import java.util.List;

public class RecipeDAO extends DAO <RecipeDTO, Recipe>{

    //singleton
    private static RecipeDAO instance;
    private RecipeDAO(){}
    public static RecipeDAO getInstance(){
        if(instance == null){
            instance = new RecipeDAO();
        }
        return instance;
    }

    @Override
    public List<Recipe> getAll(Class<Recipe> recipeClass) {
        try (EntityManager em = emf.createEntityManager()){
            List<Recipe> recipes = em.createQuery("SELECT t FROM Recipe t", Recipe.class).getResultList();
            recipes.forEach(recipe -> {
                recipe.getTags().size();
            });
            return recipes;
        }
    }

    @Override
    public Recipe create(RecipeDTO recipeDTO) {
        try (EntityManager em = emf.createEntityManager()){
            em.getTransaction().begin();
            //Persist the person
            Recipe recipe = new Recipe(recipeDTO);
            //Set the person in the recipe
            Person person = em.find(Person.class, recipeDTO.person.id);
            recipe.setPerson(person);
            em.merge(recipe);
            em.getTransaction().commit();
            /*
            //Find the autogenerated id for the recipe and return it to set it in the recipeDTO
            List<Recipe> recipes = em.createQuery("SELECT p FROM Recipe p", Recipe.class).getResultList();
            Recipe createdRecipe = recipes.get(recipes.size()-1);
            //Set the person in the recipe
            Person person = em.find(Person.class, recipeDTO.person.id);


            createdRecipe.setPerson(person);

             */
            return recipe;
        }
    }

    @Override
    public Recipe update(RecipeDTO recipeDTO) {
        return super.update(recipeDTO);
    }
}
